@startuml AudioEffect
 
hide footbox
skinparam {
    ' defaultFontName Abyssinica SIL
    Shadowing false  
    backgroundColor white
    NoteFontColor #Black
    NoteFontSize 16
    NoteTextAlignment left
    NoteBackgroundColor WhiteSmoke
    NoteColor transparent
    NoteBorderThickness 0
    NoteBorderColor transparent
    NoteBorderThickness 0
    NoteShadowing false
    ParticipantPadding 0
    BoxPadding 20
    dpi 96
    ClassBackgroundColor transparent
    ClassHeaderBackgroundColor lightgreen
    ClassStereotypeFontColor transparent
    SequenceBoxBordercolor sienna
    SequenceBoxFontSize 24
    SequenceBoxFontColor Black
    SequenceBoxBackgroundColor WhiteSmoke
    SequenceLifeLineBackgroundColor WhiteSmoke
    SequenceMessageAlignment center
    SequenceGroupHeaderFontColor White
    SequenceGroupHeaderFontSize 20
    SequenceGroupBackgroundColor DarkOliveGreen
    SequenceGroupBodyBackgroundColor transparent
    SequenceGroupBorderThickness 4
    SequenceGroupBorderColor DarkOliveGreen
    ' transparent
    sequence {
        ParticipantBackgroundColor WhiteSmoke
        ParticipantBorderColor Gray
        ParticipantFontStyle Bold
        ParticipantFontSize 12
        ParticipantPadding 0
 
        LifeLineBorderColor DimGray
        ArrowColor Black
        ArrowThickness 0.8
        ColorArrowSeparationSpace 30
    }
}

participant "[AudioEffect]\nEqualizer" as Equalizer #OrangeRed

box AudioFlinger
participant "AudioEffect" as AudioEffect
participant AudioFlinger
' participant EffectsFactoryHalInterface
participant PlaybackThread
participant EffectChain
participant EffectModule
end box

box Effect HAL(HIDL)
participant "[EffectHalInterface]\nEffectHalHidl" as EffectHalHidl
participant EqualizerEffect
participant Effect
participant ProcessThread
' end box

' box Effect Factory
participant EffectsFactoryHalHidl
participant EffectsFactory
end box

box libbundlewrapper.so
participant effect_handle_t
participant effect_interface_s
participant EffectBundle
end box


-->PlaybackThread:new
PlaybackThread->PlaybackThread:threadLoopt()
activate PlaybackThread #Yellow

note over PlaybackThread:**<size 24>OTHER_PROCESS</size>**

-->AudioFlinger:new
AudioFlinger-->EffectsFactoryHalHidl:new
note right:EffectsFactoryHalInterface::EffectsFactoryHalInterface()\n\
EffectsFactoryHalHidl::EffectsFactoryHalHidl()
' EffectsFactoryHalHidl-->EffectsFactory:new
EffectsFactory-->o EffectsFactoryHalHidl:mEffectsFactory
EffectsFactoryHalHidl-->o AudioFlinger:mEffectsFactoryHal

-->Equalizer:new
activate Equalizer
Equalizer->Equalizer:android_media_\nAudioEffect_\nnative_setup()
activate Equalizer
Equalizer-->AudioEffect:new
deactivate Equalizer
deactivate Equalizer
activate AudioEffect
AudioEffect->AudioFlinger:createEffect()
deactivate AudioEffect
' activate AudioFlinger
' AudioFlinger->AudioFlinger:getEffectDescriptor()
' activate AudioFlinger
' AudioFlinger->EffectsFactoryHalHidl:getDescriptor()
' activate EffectsFactoryHalHidl
' EffectsFactoryHalHidl->EffectsFactoryHalHidl:queryAllDescriptors()
' activate EffectsFactoryHalHidl
' EffectsFactoryHalHidl->EffectsFactory:getAllDescriptors()
' deactivate EffectsFactoryHalHidl
' deactivate EffectsFactoryHalHidl
' activate EffectsFactory
' EffectsFactory->EffectsFactory:EffectQueryEffect()
' EffectsFactory->EffectsFactory:effectDescriptorFromHal()
' deactivate EffectsFactory


AudioFlinger->PlaybackThread:createEffect_l()
deactivate AudioFlinger
deactivate AudioFlinger
activate PlaybackThread
PlaybackThread->EffectChain:createEffect_l()
deactivate PlaybackThread
activate EffectChain
EffectChain-->EffectModule:new
activate EffectModule
EffectModule->EffectsFactoryHalHidl:createEffect()
activate EffectsFactoryHalHidl
EffectsFactoryHalHidl->EffectsFactory:createEffect()
activate EffectsFactory
EffectsFactory->EffectsFactory:EffectCreate()
activate EffectsFactory
EffectsFactory->EffectsFactory:init()
activate EffectsFactory
EffectsFactory->EffectsFactory:EffectLoadXmlEffectConfig()
activate EffectsFactory

EffectsFactory->EffectsFactory:loadLibraries()
activate EffectsFactory
EffectsFactory->EffectsFactory:loadLibrary()
activate EffectsFactory
deactivate EffectsFactory
deactivate EffectsFactory

EffectsFactory->EffectsFactory:loadEffects()
activate EffectsFactory
EffectsFactory->EffectsFactory:loadEffect()
deactivate EffectsFactory
deactivate EffectsFactory
deactivate EffectsFactory

note over PlaybackThread:**<size 24>OTHER_PROCESS</size>**

EffectsFactory->EffectsFactory:findEffect()
EffectsFactory-->EffectBundle:new
EffectBundle-->effect_interface_s:new
EffectsFactory->effect_interface_s:**create_effect**
effect_interface_s->EffectBundle:EffectCreate()
' EffectBundle-->effect_interface_s:new
EffectsFactory-->effect_handle_t:new
deactivate EffectsFactory
effect_interface_s-->o effect_handle_t:subItfe

EffectsFactory-> effect_handle_t:**get_descriptor**
effect_handle_t->effect_interface_s:**get_descriptor**
effect_interface_s->EffectBundle:EffectGetDescriptor()
EffectsFactoryHalHidl-->EffectHalHidl:new
deactivate EffectsFactoryHalHidl
activate EffectHalHidl

EffectsFactory->EffectsFactory:dispatchEffectInstanceCreation()
activate EffectsFactory
EffectsFactory-->EqualizerEffect:new
deactivate EffectsFactory
deactivate EffectsFactory
activate EqualizerEffect
EqualizerEffect-->Effect:new
Effect-->o EqualizerEffect:mEffect
EqualizerEffect-->o EffectHalHidl:mEffect
deactivate EqualizerEffect
EffectHalHidl-->o EffectModule:mEffectInterface
deactivate EffectHalHidl

EffectChain->EffectChain:addEffect_ll()
activate EffectChain
EffectModule-->o EffectChain:mEffects.insertAt()
deactivate EffectModule
deactivate EffectChain
deactivate EffectChain


note over PlaybackThread:**<size 24>OTHER_PROCESS</size>**
PlaybackThread->EffectChain:process_l()
deactivate PlaybackThread
EffectChain->EffectModule:process()
EffectModule->EffectHalHidl:process()
activate EffectHalHidl
EffectHalHidl->EffectHalHidl:processImpl()
activate EffectHalHidl
EffectHalHidl->EffectHalHidl:prepareForProcessing()
activate EffectHalHidl
EffectHalHidl->EqualizerEffect:prepareForProcessing()
deactivate EffectHalHidl
deactivate EffectHalHidl
deactivate EffectHalHidl
EqualizerEffect->Effect:prepareForProcessing()
Effect-->ProcessThread:new
ProcessThread-->o Effect:mProcessThread

activate ProcessThread
ProcessThread->ProcessThread:threadLoop()
activate ProcessThread
ProcessThread->effect_handle_t:**process**
deactivate ProcessThread
deactivate ProcessThread

@enduml